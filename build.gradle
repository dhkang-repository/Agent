plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'
description = 'agent'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    // ## SPRING STARTER
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'

    // ## JDBC 프록시 로깅
    implementation 'net.ttddyy:datasource-proxy:1.9'

    // ## ACTUATOR
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // ## SPRING CLOUD OPEN FEIGN
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // ##  WEB-FLUX
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'

    // ## REDIS
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.apache.commons:commons-pool2'

    // ## SECURITY
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // ## OAUTH
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // ## JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // ## Apache Commons Text
    implementation 'org.apache.commons:commons-text:1.10.0'

    // ## APACHE UTIL
    implementation 'org.apache.commons:commons-lang3'
    implementation 'commons-io:commons-io:2.18.0'

    // ## VALIDATION
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // ## WEB
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly "org.springframework.boot:spring-boot-starter-tomcat"

    // ## SWAGGER
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // ## LOGGING
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    // ## THYMELEAF
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // ## thymeleaf

    // ## GOOGLE AUTH OTP // ## QR GENERATE
    implementation 'com.warrenstrange:googleauth:1.5.0'
    implementation 'dev.samstevens.totp:totp:1.7.1'
    implementation 'com.google.zxing:core:3.4.1'
    implementation 'com.google.zxing:javase:3.4.1'

    // ## AWS SDK
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // ## EXCEL - APACHE POI
    implementation 'org.apache.poi:poi:4.1.2'
    implementation 'org.apache.poi:poi-ooxml:4.1.2'

    // ## SMTP
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // ## LOMBOK
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // ## DB
    runtimeOnly 'com.mysql:mysql-connector-j'

    // ## JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // ## QueryDSL
    implementation "com.querydsl:querydsl-jpa:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
    annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드

    // ## SWAGGER UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.8.5'

    // ## Kafka
    implementation "org.springframework.kafka:spring-kafka" // Kafka를 활용하기 위한 라이브러리
    implementation "org.apache.kafka:kafka-streams" // Kafka의 메시지 및 스트림 처리

    // ## TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

}
test {
    enabled = false
}

tasks.processResources {
    exclude("infra/**")
}

tasks.processTestResources {
    exclude("infra/**")
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]

    main {
        resources {
            exclude 'infra/**'
        }
    }

}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

bootJar {
    exclude("infra/**")
    archiveFileName = 'Agent.jar'
}
